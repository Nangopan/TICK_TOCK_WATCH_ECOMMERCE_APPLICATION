<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="index.html" rel="nofollow">Home</a>
                <span></span> Pages
                <span></span> Account
            </div>
        </div>
    </div>
    <section class="pt-50 pb-150">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 m-auto">
                    <div class="row">
                        {{> profileHeader}}
                        
                        <div class="col-md-9">
                            <section class="content-body p-xl-4">
                                <div class="content-header">
                                    <div>
                                        <h2 class="content-title card-title">Order detail</h2>
                                        <p>Details for Order ID: {{myOrderDetails._id}}</p>
                                    </div>
                                </div>
                                <div class="card">
                                    <header class="card-header">
                                        <div class="row align-items-center">
                                            <div class="col-lg-6 col-md-6 mb-lg-0 mb-15">
                                                <span>
                                                    <i class="material-icons md-calendar_today"></i>
                                                    <b>{{myOrderDetails.date}}</b>
                                                </span> <br>
                                                <small class="text-muted">Order ID: {{myOrderDetails._id}}</small>
                                            </div>
                                            <div class="col-lg-6 col-md-6 ms-auto text-md-end">
                                                <a onclick="getInvoice('{{myOrderDetails._id}}')"
                                                    class="btn btn-secondary print ms-2" href="#"><i
                                                        class="fa fa-print" style="font-size: 1rem;"></i></a>
                                            </div>
                                        </div>
                                    </header>
                                    <div class="card-body">
                                        <div class="row mb-50 mt-20 order-info-wrap">
                                            <div class="col-md-4">
                                                <article class="icontext align-items-start">
                                                    <span class="icon icon-sm rounded-circle bg-primary-light">
                                                        <i class="text-primary material-icons md-person"></i>
                                                    </span>
                                                    <div class="text">
                                                        <h6 class="mb-1">Customer</h6>
                                                        <p class="mb-1">
                                                            {{address.name}} <br> {{address.mobile}}
                                                        </p>
                                                    </div>
                                                </article>
                                            </div>
                                            <div class="col-md-4">
                                                <article class="icontext align-items-start">
                                                    <span class="icon icon-sm rounded-circle bg-primary-light">
                                                        <i class="text-primary material-icons md-local_shipping"></i>
                                                    </span>
                                                    <div class="text">
                                                        <h6 class="mb-1">Order info</h6>
                                                        <p class="mb-1">
                                                            Shipping: Fargo express <br> Pay method:
                                                            {{myOrderDetails.paymentMethod}} <br> Status:
                                                            {{myOrderDetails.status}}
                                                        </p>
                                                    </div>
                                                </article>
                                            </div>
                                            <div class="col-md-4">
                                                <article class="icontext align-items-start">
                                                    <span class="icon icon-sm rounded-circle bg-primary-light">
                                                        <i class="text-primary material-icons md-place"></i>
                                                    </span>
                                                    <div class="text">
                                                        <h6 class="mb-1">Deliver to</h6>
                                                        <p class="mb-1">
                                                            City: {{address.city}}, {{address.state}}
                                                            <br>{{address.addressLine1}} 
                                                            <br>Pin: {{address.pin}}
                                                        </p>
                                                    </div>
                                                </article>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-8">
                                                <div class="table-responsive">
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th width="40%">Product</th>
                                                                <th width="20%">Unit Price</th>
                                                                <th width="20%">Quantity</th>
                                                                <th width="20%">Total</th>
                                                                <th width="80%">Cancel/Return</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            {{#each orderedProDet}}
                                                            <tr>
                                                                <td>
                                                                    <a class="itemside" href="#">
                                                                        <div class="left">
                                                                            <img src="/assets/imgs/products/{{this.product.image}}"
                                                                                width="40" height="40" class="img-xs"
                                                                                alt="Item">
                                                                        </div>
                                                                        <div class="info">{{this.product.name}}</div>
                                                                    </a>
                                                                </td>
                                                                <td>
                                                                    <!-- Display discount price if available, otherwise show the original price -->
                                                                    ₹{{#if this.product.discountPrice}}{{this.product.discountPrice}}{{else}}{{this.product.price}}{{/if}}
                                                                </td>
                                                                <td>{{this.product.quantity}}</td>
                                                                <td>
                                                                    <!-- Multiply quantity with either discount price or original price -->
                                                                    ₹{{#if this.product.discountPrice}}
                                                                        {{multiply this.product.quantity this.product.discountPrice}}
                                                                    {{else}}
                                                                        {{multiply this.product.quantity this.product.price}}
                                                                    {{/if}}
                                                                </td>

                                                                <td class="text-end">                                                                    
                                                                    {{#singlestatuchecker this.product}}
                                                                        {{#ifCond ../myOrderDetails.status '==' 'Delivered'}}
                                                                            {{#if (eq ../orderedProDet.length 1)}}
                                                                                <!-- Disable the return button if only one product exists -->
                                                                                <button id="returnnow-btn" class="btn btn-primary btn-sm return-btn" data-order-id="{{../myOrderDetails._id}}" data-prod-id="{{this.product._id}}" style="background-color: #d6d6d6; border-color: #c0c0c0; color: #808080; cursor: not-allowed;" disabled>Return</button>
                                                                            {{else}}
                                                                                <!-- Enable the return button if there are multiple products -->
                                                                                <button id="returnnow-btn" class="btn btn-primary btn-sm return-btn" data-order-id="{{../myOrderDetails._id}}" data-prod-id="{{this.product._id}}">Return</button>
                                                                            {{/if}}
                                                                        {{else}} 
                                                                            {{#ifCond ../myOrderDetails.status '==' 'Payment Failed'}}
                                                                                <button id="retryPayment" class="btn btn-primary btn-sm retry-btn" data-order-id="{{../myOrderDetails._id}}" data-prod-id="{{this.product._id}}" style="background-color: #d6d6d6; border-color: #c0c0c0; color: #808080; cursor: not-allowed;" disabled>Retry Payment</button>
                                                                            {{else}}
                                                                                {{#ifCond ../myOrderDetails.status '==' 'Cancelled'}}
                                                                                    <!-- Disable the cancel button for each product if the entire order is cancelled -->
                                                                                    <button id="cancel-btn" class="btn btn-primary btn-sm cancel-btn" style="background-color: #d6d6d6; border-color: #c0c0c0; color: #808080; cursor: not-allowed;" disabled>Cancel</button>
                                                                                {{else}}
                                                                                    {{#if (eq ../orderedProDet.length 1)}}
                                                                                        <!-- Disable the cancel button if only one product exists -->
                                                                                        <button id="cancel-btn" class="btn btn-primary btn-sm cancel-btn" style="background-color: #d6d6d6; border-color: #c0c0c0; color: #808080; cursor: not-allowed;" disabled>Cancel</button>
                                                                                    {{else}}
                                                                                        <button id="cancel-btn" class="btn btn-primary btn-sm cancel-btn" data-order-id="{{../myOrderDetails._id}}" data-prod-id="{{this.product._id}}">Cancel</button>
                                                                                    {{/if}}
                                                                                {{/ifCond}}
                                                                            {{/ifCond}}
                                                                        {{/ifCond}}
                                                                    {{/singlestatuchecker}}
                                                                </td>
                                                            </tr>
                                                            {{/each}}
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <!-- Order summary row outside of table for better horizontal alignment -->
                                 <div class="d-flex justify-content-end mt-4">
    <div class="order-summary d-flex flex-wrap align-items-center p-3 bg-light rounded shadow-sm">
        <div class="d-flex align-items-center px-3 py-2 border-end">
            <span class="text-muted me-3 fw-bold">Delivery:</span>
            <span class="text-danger">+₹ 50</span>
        </div>
        <div class="d-flex align-items-center px-3 py-2 border-end">
            <span class="text-muted me-3 fw-bold">Discount:</span>
            <span class="text-success">
                {{#if myOrderDetails.discountAmt}}
                -₹ {{myOrderDetails.discountAmt}}
                {{else}}
                -₹ 0
                {{/if}}
            </span>
        </div>
        <div class="d-flex align-items-center px-3 py-2 border-end">
            <span class="text-muted me-3 fw-bold">Grand Total:</span>
            <span>
                <b id="grandTotal" class="h5 mb-0">
                    {{#if myOrderDetails.discountAmt}}
                    ₹{{myOrderDetails.amountAfterDscnt}}
                    {{else}}
                    ₹{{add myOrderDetails.total 0}}
                    {{/if}}
                </b>
            </span>
        </div>
        <div class="d-flex align-items-center px-3 py-2">
            <span class="text-muted me-3 fw-bold">Status:</span>
            <span class="badge rounded-pill alert-success text-success">{{myOrderDetails.status}}</span>
        </div>
        
        {{#statuchecker myOrderDetails}}
        {{else}}
        {{/statuchecker}}
    </div>
</div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="box shadow-sm bg-light">
                                                    <!-- Optional: any other information you want to show -->
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
var grandTotalText = document.getElementById("grandTotal").innerText;

// Remove the ₹ symbol and any commas (if applicable) from the string
const amount = parseInt(grandTotalText.replace(/[^\d]/g, '')) * 100;

// Log the amount to check if the parsing works
console.log('Grand Total:', amount);


    const getInvoice = async (id) => {
  try {
    const response = await fetch(`/get_invoice?id=${id}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/pdf'
      }
    });
    
    if (!response.ok) {
      throw new Error('Failed to fetch invoice');
    }
    
    const blob = await response.blob();

    // Create a URL for the downloaded file
    const url = URL.createObjectURL(blob);

    // Create a link element to trigger the download
    const link = document.createElement('a');
    link.href = url;
    link.download = 'invoice.pdf';

    link.click();

    // Clean up the URL object
    URL.revokeObjectURL(url);
  } catch (error) {
    console.error('Error fetching invoice:', error);    
  }
};
    $(document).ready(function () {
        function areAllProductsCancelled() {
            let allCancelled = true;
            $('.product-row').each(function () {
                if (!$(this).data('is-cancelled')) {
                    allCancelled = false;
                    return false; // Exit the loop early if any product is not cancelled
                }
            });
            return allCancelled;
        }

        // Event listener for canceling individual products
    $('body').on('click', '.cancel-btn', function () {
    const orderId = $(this).data('order-id');
    const productId = $(this).data('prod-id');
    const $button = $(this); // Store reference to button

    // Disable the button immediately to prevent multiple clicks
    $button.prop('disabled', true);
    // Add visual feedback by changing appearance
    $button.css({
        'opacity': '0.5',
        'background-color': '#d6d6d6',
        'border-color': '#c0c0c0',
        'color': '#808080',
        'cursor': 'not-allowed',
        'transition': 'opacity 0.3s ease'
    });

    if (orderId && productId) {
        $.ajax({
            type: 'PUT',
            url: '/cancel-one-product',
            contentType: 'application/json',
            data: JSON.stringify({ id: orderId, prodId: productId }),
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Cancelled product',
                        text: response.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        // Store the cancelled status in localStorage before reload
                        let cancelledButtons = JSON.parse(localStorage.getItem('cancelledButtons') || '{}');
                        cancelledButtons[`${orderId}-${productId}`] = true;
                        localStorage.setItem('cancelledButtons', JSON.stringify(cancelledButtons));
                        window.location.reload();
                    });
                }
            },
            error: function (error) {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
                // Re-enable the button on error
                $button.prop('disabled', false).css({
                    'opacity': '1',
                    'background-color': '',
                    'border-color': '',
                    'color': '',
                    'cursor': '',
                    'transition': ''
                });
            }
        });
    } else {
        alert('Invalid order or product ID.');
        // Re-enable the button if IDs are invalid
        $button.prop('disabled', false).css({
            'opacity': '1',
            'background-color': '',
            'border-color': '',
            'color': '',
            'cursor': '',
            'transition': ''
        });
    }
});

// Add this code to apply disabled state on page load
$(document).ready(function() {
    // After the page loads, check localStorage for cancelled buttons
    const cancelledButtons = JSON.parse(localStorage.getItem('cancelledButtons') || '{}');
    
    // Apply disabled state to any previously cancelled buttons
    $('.cancel-btn').each(function() {
        const orderId = $(this).data('order-id');
        const productId = $(this).data('prod-id');
        
        if (cancelledButtons[`${orderId}-${productId}`]) {
            $(this).prop('disabled', true);
            $(this).css({
                'opacity': '0.5',
                'background-color': '#d6d6d6',
                'border-color': '#c0c0c0',
                'color': '#808080',
                'cursor': 'not-allowed'
            });
        }
    });

    // Your existing ready code would continue below...
});



        

        // Event listener for canceling the entire order
        $('#cancelOrder').on('click', function () {
            const orderId = $(this).data('order-id');

            // Disable the button immediately
            $(this).prop('disabled', true);
            // Add visual feedback
            $(this).css({
                'opacity': '0.5',
                'background-color': '#d6d6d6',
                'border-color': '#c0c0c0',
                'color': '#808080',
                'cursor': 'not-allowed',
                'transition': 'opacity 0.3s ease'
            });

            if (orderId) {
                $.ajax({
                    type: 'PUT',
                    url: `/cancel-order/${orderId}`,
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                             Swal.fire({
                            icon: 'success',
                            title: 'Cancelled Order',
                            text: response.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(()=>{window.location.reload();})
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    }
                });
            } else {
                alert('Invalid order ID.');
            }
        });
        
        // Event listener for returning individual products
        $('body').on('click', '.return-btn', function () {
            const orderId = $(this).data('order-id');
            const productId = $(this).data('prod-id');

            // Disable the button immediately
            $(this).prop('disabled', true);
            // Add visual feedback
            $(this).css({
                'opacity': '0.5',
                'background-color': '#d6d6d6',
                'border-color': '#c0c0c0',
                'color': '#808080',
                'cursor': 'not-allowed',
                'transition': 'opacity 0.3s ease'
            });

            if (orderId && productId) {
                $.ajax({
                    type: 'PUT',
                    url: '/return-one-product',
                    contentType: 'application/json',
                    data: JSON.stringify({ id: orderId, prodId: productId }),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                            icon: 'success',
                            title: 'Returned product',
                            text: response.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(()=>{window.location.reload();})
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    }
                });
            } else {
                alert('Invalid order or product ID.');
            }
        });

        // Event listener for return the entire order
        $('#returnOrder').on('click', function () {
            const orderId = $(this).data('order-id');

            // Disable the button immediately
            $(this).prop('disabled', true);
            // Add visual feedback
            $(this).css({
                'opacity': '0.5',
                'background-color': '#d6d6d6',
                'border-color': '#c0c0c0',
                'color': '#808080',
                'cursor': 'not-allowed',
                'transition': 'opacity 0.3s ease'
            });

            if (orderId) {
                $.ajax({
                    type: 'PUT',
                    url: `/return-order/${orderId}`,
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                             Swal.fire({
                            icon: 'success',
                            title: 'Returned Order',
                            text: response.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(()=>{window.location.reload();})
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    }
                });
            } else {
                alert('Invalid order ID.');
            }
        });       
    });

    // Event listener for retrying payment when the order's status is "Payment Failed"
    $('body').on('click', '#retryPayment', function () {
        const orderId = $(this).data('order-id');
        console.log("orderId ", orderId);

        // Disable the button immediately
        $(this).prop('disabled', true);
        // Add visual feedback
        $(this).css({
            'opacity': '0.5',
            'background-color': '#d6d6d6',
            'border-color': '#c0c0c0',
            'color': '#808080',
            'cursor': 'not-allowed',
            'transition': 'opacity 0.3s ease'
        });

        if (orderId) {       
            console.log("amount ", amount);
            payment(orderId);
        } else {
            alert('Invalid order ID.');
        }
    });

    // Payment function
    const payment = (orderId) => {
        var options = {
            "key": "rzp_test_OsDtnewxAfAwm0", 
            "amount": parseInt(amount),
            "currency": "INR",
            "name": "Mobile Bazaar",
            "order_id": undefined,
            "handler": function (response) {
                retryPayment(orderId, 'Pending');
            },
            "modal": {
                "ondismiss": function() {
                    console.log('Payment modal dismissed');
                }
            }
        };

        var rzp1 = new Razorpay(options);

        rzp1.on('payment.failed', function (response) {
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: 'Your payment could not be processed. Please try again later.',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload(); // Reload page after payment failure
                }
            });
        });

        rzp1.open();
    };

    // Retry Payment function (update payment status)
    const retryPayment = async (orderId, status) => {
        try {
            const response = await fetch(`/retry-payment/${orderId}`, {
                method: 'POST', 
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status }) 
            });

            if (!response.ok) {
                throw new Error('Failed to update payment status');
            }

            const data = await response.json();
           
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Payment Retry Successful',
                    text: data.message, 
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    window.location.reload(); 
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Retry Failed',
                    text: data.message, 
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while retrying payment. Please try again.',
                showConfirmButton: false,
                timer: 1500
            });
        }
    };
</script>